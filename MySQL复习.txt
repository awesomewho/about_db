MySQL

事务就是要保证一组数据库操作,要么全部成功,要么全部失败.

１．事务的隔离级别
ACID
A-原子性
C-一致性
I-隔离性
D-持久性

多事务同时执行的时候,可能会出现脏读 不可重复读 幻读

SQL标准事务隔离级别包括:
读未提交RU: 一个事务未提交时,它做的变更就能被别的事务看到;
读提交RC:  一个事务提交之后,它的变更才能被其他事务看到;
可重复读RR: 一个事务执行过程中看到的数据,总跟这个事务在启动时看到的数据时一致的,可重复读隔离级别下，未提交变更对其他事务也是不可见的;
串行化S: 对于同一行记录,读写会加锁,当出现读写冲突时,后访问的事务必须等待前一个事务执行完成,才能继续执行;

create table t(c int) ENGINE= INNODB;
insert into t(c) VALUE(1);

Oracle默认事务隔离级别为读提交RC,所以从Oracle迁移数据到MySQL时,需要将MySQL的事务隔离级别设置为RC
show variables like 'transaction_isolation';　＃ 5.7.30默认隔离级别为RR

２．事务隔离的实现
事务隔离级别的实现:MySQL在每条记录在更新时都会记录一条回滚操作,记录最新值,通过回滚操作,可以得到一个当前状态的值.
不同时刻启动的事务会有不同的read-view,同一条记录在系统中可以存在多个版本即数据库的多版本并发控制MVCC.

由于长事务在系统会保留大量的事务视图,由于这写事务随时可以访问数据库里的任何数据,所以在事务提交之前,事务能用到的回滚记录都必须保留,导致回滚段暂用大量的存储和锁资源.

3. 事务的启动方式
显示启动事务语句,begin或者start transaction + commit|rollback
set autocommit=0,意思是关闭线程自动提交功能

建议: set autocommit=1,通过显示语句方式来启动事务

长事务查询方法:
select * from information_schema.innodb_trx where time_to_sec(timediff(now(),trx_started))>60;

如何避免长事务对业务的影响?
应用开发端:
通过general_log,确认set autocommit=1;
begin/commit中去掉只读事务;
设置每个语句的最长执行时间,避免单个语句执行太长时间,SET_MAX_EXECUTION_TIME;

数据库端:
监控information_schema.innodb_trx表,设置长事务阀值,超出阀值就报警或者kill,kill工具推荐pt-kill;
测试阶段开启输出所有general_log,分析日志行为提前发现问题;
MySQL5.6及以后版本,设置innodb_undo_tablespaces=2,当出现大事务导致回滚段过大,清理更方便;

索引
索引是数据库为了提高查询效率,类似于书的目录

索引常见模型
哈希表-以键值对的方式存储数据,适用于等值查询场景
有序数组-等值查询和范围查询场景性能都很优秀,只适合静态存储引擎
N叉树

InnoDB的索引模型
innodb中,表都是根据主键顺序以索引的形式存放,这种存储方式的表称为索引组织表
innodb使用B+数索引模型,B+树能够配合磁盘的读写特性,减少单次查询的磁盘访问数

覆盖索引-可以减少树的搜索次数,显著提升查询性能
前缀索引
索引下推






